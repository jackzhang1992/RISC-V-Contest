# RISC-V-Contest
This repo is used for development of the risc-v softcpu contest

Goal:
   To create a RISC-V softcpu with highest performance using 20~25k limited FPGA resources!
   
tradeoffs:  timing, function, area
    
Contributor: Jack Zhang & Romer
================================================================
Memo
- initial assessing phase
   dhrystone benchmark comparison
   study the RV32I compatible test
   set up a ref env for qemu-riscv (drystone, zephyr porting)
   study the existed verilog-based RV32 HW structure and performance

- Take use of existed materials(including cores) to make up a working reference baseline
    Mi-V core, tool chain, dhrystone and zephyr should work 
    benchmark result should be computed by the ref baseline.
   
- get started to design our own cpu to take place of the Mi-V core
   considerations:
    * ISA implementation
    * in-order
    * number of the pipeline stages
      branch predictor
      two or more issue core
      out of order
      (multi-threading/ or multicore)
      customized speedup hw logic for dhrystone
      novel approachs to realize the core structure
      
 - a simple and naive core should work in the ref baseline framework
      
 - optimization phase for the naive core
 
 
 
